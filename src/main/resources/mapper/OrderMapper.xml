<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nju.banxing.demo.domain.mapper.OrderMapper">


    <select id="getStatusByCode" resultType="java.lang.Integer">
        select order_status from banxing_order
        where id = #{orderCode, jdbcType = VARCHAR}
    </select>

    <select id="getTutorIdByCode" resultType="java.lang.String">
        select tutor_id from banxing_order
        where id = #{orderCode, jdbcType = VARCHAR}
    </select>

    <select id="getUserIdByOrderCode" resultType="java.lang.String">
        select user_id from banxing_order
        where id = #{orderCode, jdbcType = VARCHAR}
    </select>

    <select id="getStatusAndVersionByCode" resultType="java.util.Map">
        select
        order_status as status,
        version as version
        from banxing_order
        where id = #{orderCode, jdbcType = VARCHAR}
    </select>

    <select id="getTotalCostByCode" resultType="java.math.BigDecimal">
        select total_cost from banxing_order
        where id = #{orderCode, jdbcType = VARCHAR}
    </select>

    <select id="getOrderCountByTutorIdAndProcessFlag" resultType="java.lang.Long">
        select count(*) from banxing_order
        where tutor_id = #{tutorId, jdbcType = VARCHAR}
        <if test="processFlag != null and processFlag">
            and order_status = #{orderStatus, jdbcType = INTEGER}
        </if>
        <if test="processFlag != null and !processFlag">
            and order_status > #{orderStatus, jdbcType = INTEGER}
        </if>
        <if test="rowStatus != null">
            and row_status = #{rowStatus, jdbcType = TINYINT}
        </if>
    </select>

    <select id="getOrderListByTutorIdAndProcessFlag" resultType="java.util.Map">
        select
        o.id as orderCode,
        o.reserve_start_time as reserveStartTime,
        o.reserve_end_time as reserveEndTime,
        u.nick_name as userName
        from banxing_order o
        left join banxing_user u
        on o.user_id = u.id
        where o.tutor_id = #{tutorId, jdbcType = VARCHAR}
        <if test="processFlag != null and processFlag">
            and o.order_status = #{orderStatus, jdbcType = INTEGER}
        </if>
        <if test="processFlag != null and !processFlag">
            and o.order_status > #{orderStatus, jdbcType = INTEGER}
        </if>
        <if test="rowStatus != null">
            and row_status = #{rowStatus, jdbcType = TINYINT}
        </if>
        order by o.create_time asc, o.id asc
        limit #{offset}, #{pageSize}
    </select>

    <select id="getOrderDetailByOrderCodeAndTutorId" resultType="java.util.Map">
        select
        id as orderCode,
        reserve_start_time as reserveStartTime,
        reserve_end_time as reserveEndTime,
        consultation_content as consultationContent,
        resume_url as resumeUrl,
        reject_reason as rejectReason,
        conference_link as conferenceLink,
        user_id as userId
        from banxing_order
        where id = #{orderCode, jdbcType = VARCHAR}
        and tutor_id = #{tutorId, jdbcType = VARCHAR}
        <if test="rowStatus != null">
            and row_status = #{rowStatus, jdbcType = TINYINT}
        </if>
    </select>

    <select id="getOrderConferenceInfoByOrderCode" resultType="java.util.Map">
        select
        reserve_start_time as reserveStartTime,
        reserve_end_time as reserveEndTime
        from banxing_order
        where id = #{orderCode, jdbcType = VARCHAR}
        <if test="rowStatus != null">
            and row_status = #{rowStatus, jdbcType = TINYINT}
        </if>
    </select>


</mapper>
